// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  SELLER
  MECHANIC
  MANAGER
  ADMIN
}

enum OdometerUnit {
  MILES
  KILOMETER
  HOURS
}

model User {
  id         Int     @id @default(autoincrement())
  first_name String?
  last_name  String?
  email      String  @unique
  password   String
  role       Role    @default(USER)

  created_by String   @default("System")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Customer {
  id Int @id @default(autoincrement())

  first_name String
  last_name  String
  addressId  Int
  email      String  @unique
  phone      String
  mobile     String
  isBadPayer Boolean @default(false)

  rents Rent[]

  created_by String   @default("System")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  address Address @relation(fields: [addressId], references: [id])
}

model Rent {
  id Int @id @default(autoincrement())

  delivery_address Int // RELATION
  isDelivered      Boolean @default(false)
  pickup_address   Int
  isPickedUp       Boolean @default(false)

  rent_start_date      DateTime
  rent_end_date        DateTime
  rent_actual_end_date DateTime
  rent_duration        DateTime
  rent_actual_duration DateTime

  Customer        Customer? @relation(fields: [customerId], references: [id])
  customerId      Int? // RELATION
  invoice_address Address   @relation(fields: [addressId], references: [id])
  addressId       Int // RELATION
}

model EquipmentAttribute {
  id Int @id @default(autoincrement())

  created_by String   @default("System")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  equipment    Equipement @relation(fields: [equipementId], references: [id])
  equipementId Int
  attribut     Attribute  @relation(fields: [attributeId], references: [id])
  attributeId  Int
}

model Equipement {
  id Int @id @default(autoincrement())

  name                  String
  description           String
  active                Boolean      @default(false)
  internal_number       String?
  serial_number         String?
  vin_number            String?
  manufacturer          String
  model                 String
  year                  String
  odometer_unit         OdometerUnit @default(HOURS)
  odometer_value        Int
  maintenance_frequency Int

  created_by         String               @default("System")
  created_at         DateTime             @default(now())
  updated_at         DateTime             @updatedAt
  EquipmentAttribute EquipmentAttribute[]
  category           Category             @relation(fields: [categoryId], references: [id])
  categoryId         Int
  EquipmentTripLog   EquipmentTripLog[]
  EquipementPosition EquipementPosition[]
}

model EquipmentOdometerLog {
  id Int @id @default(autoincrement())

  equipment                      Int
  odometer_value                 Int
  next_insurrance_expiry         DateTime
  next_general_inspection_expiry DateTime
  maintenance_reminder_1         Int
  maintenance_reminder_2         DateTime

  created_by String   @default("System")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model EquipmentTripLog {
  id Int @id @default(autoincrement())

  equipementId Int

  start_date DateTime
  start_lat  Float
  start_lng  Float

  end_date DateTime?
  end_lat  Float?
  end_lng  Float?

  duration DateTime?
  distance Float?

  equipment Equipement @relation(fields: [equipementId], references: [id])
}

model EquipementPosition {
  id Int @id @default(autoincrement())

  equipementId Int
  log_date     DateTime
  latitude     Float
  longitude    Float

  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  equipment  Equipement @relation(fields: [equipementId], references: [id])
}

model Maintenace {
  id Int @id @default(autoincrement())

  date           DateTime
  employee_name  String
  employee_notes String
  odometer_value Int

  preventive_actions String
  curative_actions   String

  created_by String   @default("System")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

// -------------- DATAS --------------
// TODO: SEEDING FUNCTION
model Category {
  id Int @id @default(autoincrement())

  name String
  slug String

  created_by String       @default("System")
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
  Equipement Equipement[]
}

model Attribute {
  id Int @id @default(autoincrement())

  name String

  created_by String   @default("System")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  EquipmentAttribute EquipmentAttribute[]
}

model Address {
  id Int @id @default(autoincrement())

  name           String
  address_line_1 String
  address_line_2 String?
  postal_code    String
  city           String
  state          String?
  country        String

  created_by String   @default("System")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Rent     Rent[]
  Customer Customer[]
}

model OpeningHour {
  id Int @id @default(autoincrement())

  day        Int
  start_hour DateTime
  end_hour   DateTime
}

model SpecialDate {
  id Int @id @default(autoincrement())

  name String
  date DateTime

  created_by String   @default("System")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model StoreInfo {
  id Int @id @default(autoincrement())

  name String

  phone String
  email String
  fax   String

  address_line_1 String
  address_line_2 String?
  postal_code    String
  city           String
  state          String?
  country        String
}

// -----------------------------------
